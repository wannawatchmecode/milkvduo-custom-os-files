#!/usr/bin/env bash
#ifconfig usb0

echo "Getting existing IP"

#EXISTING_IP=$(ifconfig usb0 | grep 'inet addr' | cut -d: -f2 | awk '{print $1}')

#if [ $EXISTING_IP != "127.168.42.1" ] ;then
#	echo "IP has already been updated to non default of $EXISTING_IP ..."
#	echo "Skipping setip init script"
#	exit 0
#fi

echo "Exising ip is default of ${EXISTING_IP} ... updating"

THIRD_SUBNET=42
#$((1 + $RANDOM % 255))
NEW_IP_LAST_SUBNET=$((1 + $RANDOM % 255))
IP="192.168.$THIRD_SUBNET.$NEW_IP_LAST_SUBNET"
OVERRIDE_PATH=/etc/overrides
if test -f "${OVERRIDE_PATH}/ip_override.txt"; then
	  echo "${OVERRIDE_PATH}/ip_override.txt file exists."
	IP=$(cat "${OVERRIDE_PATH}/ip_override.txt")
  else
	  echo "${OVERRIDE_PATH}/ip_override.txt file does not exist"
	  echo "Using ip ${IP} and writing to ${OVERRIDE_PATH}/ip_override.txt"
	  mkdir -p ${OVERRIDE_PATH}/
	  echo "$IP" > ${OVERRIDE_PATH}/ip_override.txt
fi

echo "Using ip ${IP} ..."



echo "#!/bin/sh

/etc/uhubon.sh device >> /tmp/rndis.log 2>&1
/etc/run_usb.sh probe rndis >> /tmp/rndis.log 2>&1
/etc/run_usb.sh start rndis >> /tmp/rndis.log 2>&1

sleep 0.5
ifconfig usb0 $IP

count=\`ps | grep dnsmasq | grep -v grep | wc -l\`
if [ \${count} -lt 1 ] ;then
	  echo \"/etc/init.d/S80dnsmasq start\" >> /tmp/rndis.log 2>&1
	    /etc/init.d/S80dnsmasq start >> /tmp/rndis.log 2>&1
fi
" > /mnt/system/usb-rndis.sh

echo "# interface file auto-generated by S00setip

auto lo
iface lo inet loopback

usb0 $IP
"

echo "interface=usb0
#dhcp-range=192.168.$THIRD_SUBNET.2,192.168.$THIRD_SUBNET.242,1h
dhcp-range=$IP,$IP,5m
dhcp-option=3
dhcp-option=6
" > /etc/dnsmasq.conf

echo "#!/bin/sh

/etc/uhubon.sh device >> /tmp/ncm.log 2>&1
/etc/run_usb.sh probe ncm >> /tmp/ncm.log 2>&1
if test -e /usr/bin/burnd; then
	  /etc/run_usb.sh probe acm >> /tmp/ncm.log 2>&1
fi
/etc/run_usb.sh start ncm >> /tmp/ncm.log 2>&1

sleep 0.5
ifconfig usb0 $IP

count=`ps | grep dnsmasq | grep -v grep | wc -l`
if [ ${count} -lt 1 ] ;then
	  echo \"/etc/init.d/S80dnsmasq start\" >> /tmp/ncm.log 2>&1
	    /etc/init.d/S80dnsmasq start >> /tmp/ncm.log 2>&1
fi

sleep 2
mkdir -p /lib/firmware
if test -e /usr/bin/burnd; then
	  burnd &
	    if test -e /lib/firmware/arduino.elf; then
		        sleep 2
			    echo stop  > /sys/class/remoteproc/remoteproc0/state
			        echo start > /sys/class/remoteproc/remoteproc0/state
				  fi
fi
" > /mnt/system/usb.sh 

#if hostname eq 'milkv-duo' ;then
#	new_name=$(/root/scripts/random_key.sh | awk '{print "milkv-duo-"$1}'
#   	hostnamectl set-hostname $new_name
#fi
